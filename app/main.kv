#:kivy 2.1.0
#:include kv/exam.kv
#:include kv/navdrawer.kv
#:include kv/okwidgets.kv
#:include kv/patient.kv
#:include kv/toolbarscreen.kv

MDNavigationLayout:
    ScreenManager:
        id: screen_manager


        ToolbarScreen:
            name: "homescreen"
            title: "OpenKardio"
            action_items: [['menu', lambda x: app.root.ids.nav_drawer.set_state("open")]]
            right_items: [['refresh-circle',lambda _: app.retrieve_foreign_cases()]]
            MDLabel:
                id: out
                halign: "center"
            MDLabel:
                id: bt_out
                halign: "center"
            MDRaisedButton:
                text: "Create Random Object"



        ToolbarScreen:
            name: "ekg_list_view"
            title: "Exámenes"
            action_items: [['menu', lambda x: app.root.ids.nav_drawer.set_state("open")]]
            right_items: [['plus-box', lambda _: app.go_to("select_patient_view")]]
            on_enter:
                app.retrieve_own_cases()
                app.root.ids.exam_list.populate()

            ExamList:
                id: exam_list


        ToolbarScreen:
            name: "ekg_detail_view"
            right_items: [['delete',lambda x: app.delete_exam(self.object_id)],['send', lambda x: app.send_exam(self.object_id)],['refresh-circle', lambda _: app.retrieve_own_cases()]]
            title: "View ekg"
            action_items: [['arrow-left', lambda *args : app.go_back("ekg_list_view")]]
            on_enter:
                app.root.ids.ekg_plot.populate(app.root.ids.exam_metadata.populate(self.object_id))
            ExamMetadataDetail:
                id: exam_metadata
                size_hint_y: 0.35
            ScrollView:
                do_scroll_y: False
                effect_cls: 'ScrollEffect'
                Plot:
                    id: ekg_plot
                    size_hint_x: None
                    size_hint_y: None
                    height: self.parent.height
                    width: self.parent.width
            MDBoxLayout:
                orientation:'horizontal'
                size_hint_y: 0.25
                padding: "2dp"
                spacing: "2dp"
                MDLabel:
                    text: "Comentarios:"
                    font_style: "Subtitle2"
                    halign: "right"
                    size_hint_x: 0.3
                    theme_text_color: "Custom"
                    text_color: 0, 0, 0.9, 1
                MDLabel:
                    id: notes
                    md_bg_color: 1,1,1,0.94
            MDBoxLayout:
                orientation:'horizontal'
                size_hint_y: 0.25
                padding: "2dp"
                spacing: "2dp"
                MDLabel:
                    text: "Diagnóstico:"
                    font_style: "Subtitle2"
                    halign: "right"
                    size_hint_x: 0.3
                    theme_text_color: "Custom"
                    text_color: 0.1, 0.7, 0.1, 1
                MDLabel:
                    id: diagnostic
                    md_bg_color: 1,1,1,0.94


        ToolbarScreen:
            name: "select_patient_view"
            title: "Seleccione el paciente"
            action_items: [['arrow-left', lambda *args : app.go_back("ekg_list_view")]]
            on_enter: app.root.ids.patient_selector.populate()
            PatientSelector:
                id: patient_selector


        ToolbarScreen:
            name: "ekg_create_view"
            title: "Nuevo EKG"
            action_items: [['arrow-left', lambda *args : app.go_back("ekg_list_view")]]
            right_items: [['content-save', lambda _: app.save_exam()],['play',lambda _: app.ble_disconnect()]]
            on_enter:
                app.root.ids.new_exam_metadata.populate(self.object_id)
                app.root.ids.new_ekg.reset()
                app.root.ids.ok_device_panel.duration = app.store['device']['duration']
            ExamMetadataForm:
                id: new_exam_metadata
            ScrollView:
                do_scroll_y: False
                effect_cls: 'ScrollEffect'
                Plot:
                    id: new_ekg
                    size_hint_x: None
                    size_hint_y: None
                    height: self.parent.height
                    width: self.parent.width
                    sample_rate: app.ble.sample_rate
            OKDevicePanel:
                id: ok_device_panel
                sample_rate: app.ble.sample_rate
                leads: app.ble.lead_count
                battery: app.ble.battery_level
                resolution: app.ble.resolution
                fw_version: app.ble.fw_version
                ble_state: app.ble.state

        ToolbarScreen:
            name: "patient_list_view"
            title: "Pacientes"
            action_items: [['menu', lambda x: app.root.ids.nav_drawer.set_state("open")]]
            right_items: [['plus-box', lambda _: app.go_to("patient_create_view")]]
            on_enter: app.root.ids.patient_list.populate()
            ScrollView:
                PatientList:
                    id: patient_list


        ToolbarScreen:
            name: "patient_detail_view"
            title: "View Patient"
            action_items: [['arrow-left', lambda _ : app.go_back("patient_list_view")]]
            right_items: [['delete', lambda _: app.delete_patient(self.object_id)]]
            on_enter: app.root.ids.patient_detail.populate(self.object_id)
            PatientDetail:
                id: patient_detail


        ToolbarScreen:
            name: "patient_create_view"
            title: "Nuevo paciente"
            action_items: [['arrow-left', lambda *args : app.go_back("patient_list_view")]]
            ScrollView:
                PatientForm:
                    id: patient_form


        ToolbarScreen:
            name: "config"
            title: "Configuración"
            action_items: [['menu', lambda x: app.root.ids.nav_drawer.set_state("open")]]
            on_enter:
                uid.ids.text_field.text = app.store['user']['id']
                mode_control.populate()
                device_control.populate()
                filter_control.populate()
            MDLabel:
                text: "ID de Usuario"
                font_style: "H6"
                halign: "center"
            OKIdTextField:
                id: uid
                md_bg_color: .8,.8,.9,.9 
            MDLabel:
                text: "Modo de uso de la Aplicación"
                font_style: "H6"
                halign: "center"
            OKModeControl:
                id: mode_control
                md_bg_color: .8,.8,.9,.9
            MDLabel:
                text: "Duración del examen (segundos)"
                font_style: "H6"
                halign: "center"
            OKDeviceControl:
                id: device_control
                md_bg_color: .8,.8,.9,.9
            MDLabel:
                text: "Filtro digital (Dispositivo)"
                font_style: "H6"
                halign: "center"
            OKFilterControl:
                id: filter_control
                md_bg_color: .8,.8,.9,.9
            Widget:


        ToolbarScreen:
            name: "help"
            title: "Ayuda"
            action_items: [['menu', lambda x: app.root.ids.nav_drawer.set_state("open")]]


    MDNavigationDrawer:
        id: nav_drawer
        ContentNavigationDrawer:
            id: content_drawer